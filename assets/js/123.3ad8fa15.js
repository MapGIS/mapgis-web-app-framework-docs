(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{482:function(t,s,a){"use strict";a.r(s);var n=a(18),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"微件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#微件"}},[t._v("#")]),t._v(" 微件")]),t._v(" "),a("h2",{attrs:{id:"微件类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#微件类型"}},[t._v("#")]),t._v(" 微件类型")]),t._v(" "),a("p",[t._v("支持两种类型的 widget：in-panel 和 off-panel，每个 widget 都有一个 openAtStart 控制其是否初始打开。")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("In-panel")]),t._v("，即 inPanel 设置为 true，表示需要在一个 panel 中打开的")]),t._v(" "),a("li",[a("strong",[t._v("Off-panel")]),t._v("，即 inPanel 设置为 false，表示不需要在 panel 中打开")])]),t._v(" "),a("h2",{attrs:{id:"所需文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#所需文件"}},[t._v("#")]),t._v(" 所需文件")]),t._v(" "),a("p",[t._v("一般情况下，一个 widget 只有 1 个 manifest 文件。")]),t._v(" "),a("h2",{attrs:{id:"微件-manifest"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#微件-manifest"}},[t._v("#")]),t._v(" 微件 manifest")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// widget的标识名称")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"底图管理"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// widget的作者")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"author"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MapGIS"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// widget的描述")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// widget的组件名，如果inPanel为false，则表示widget本身UI，")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果inPanel为true，其icon会显示到地图占位区域或内容区域中，widget本身UI会展示到Panel中")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"component"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MpBasemapManager"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// widget图标")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"icon"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<svg class=\\"icon\\" viewBox=\\"0 0 1024 1024\\" xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"200\\" height=\\"200\\"><defs><style/></defs><path d=\\"M64 64h384v384H64zm512 0h384v384H576zM64 576h384v384H64zm512 0h384v384H576z\\"/></svg>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// widget属性表")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"properties"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 确定widget是否支持2D，默认为true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2D"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 确定widget是否支持3D，默认为false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3D"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置widget是否inPanel，如果不在一个panel中，widget会直接展示，默认为true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"inPanel"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置为true的话，默认加载config文件，反之不加载，默认为true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hasConfig"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设为为true的话，builder会加载setting页。如果为false并且widget可配置则展示一个Json编辑器")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hasSettingPage"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果有setting页，settingUiComponent表示设置页ui的组件名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"settingUiComponent"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 确定widget的窗口大小，默认为normal，可设置为normal（常规的，由panel决定）、max（最大化），可不设置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"windowSize"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"max"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自定义widget面板的宽度，Number格式，在经典主题下工具条微件所属面板默认为320，左侧微件所属面板默认为280，可不设置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"customWidth"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("280")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 确定widget的窗口是否有边距，默认为true，可设置为false，可不设置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hasPadding"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置微件是否懒加载，默认为false，当为true的时候，会在打开微件面板时才会去加载微件，可通过此特性控制初始加载的微件数和内存大小")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lazyload"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置微件是否有UI，默认为true，当inPanel为false且hasUi也为false时，会自动加载该微件，并由内容区域负责该微件的标识和响应")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hasUi"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"使微件可配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使微件可配置"}},[t._v("#")]),t._v(" 使微件可配置")]),t._v(" "),a("p",[t._v("要使 widget 可配置，需要两个步骤")]),t._v(" "),a("ol",[a("li",[t._v("widget 中有一个配置文件 config.json")]),t._v(" "),a("li",[t._v("配置 manifest.json 文件中的 properties. hasConfig 为 true")])]),t._v(" "),a("p",[t._v("最佳实践是，如果一个 widget 可配置，就需要提供一个配置 UI，让其可以在应用中有自己专属的配置页面。请遵循下面 widget 的约定：")]),t._v(" "),a("ol",[a("li",[t._v("配置 manifest.json 文件中的 properties. hasSettingPage 为 true")]),t._v(" "),a("li",[t._v("配置 manifest.json 文件中的 properties. settingUiComponent")])])])}),[],!1,null,null,null);s.default=e.exports}}]);